# def create_alien
#   puts "It looks like this is a new planet! Create and Save the new alien? yes/no "
#   while yn = gets.chomp
#     case yn.downcase
#     when "yes","y"
#       puts "Enter name: "
#       name = gets.chomp
#       puts "Species? "
#       species = gets.chomp
#       @current_user.aliens << Alien.find_or_create_by(name: name, status: "Alive", species: species, planet_id: @random_planet.id, points: name.length)
#       break
#     when "no","n"
#       puts "Fine! Whatever!"
#       break
#     else
#       puts "YES or NO! It's not that hard!"
#     end
#   end
# end


#
#   def title_menu
#     puts "1. New to Mortty game
#     2. I'M back!
#     3. Gota Go~"
#     puts "select your option:"
#     @login = gets.chomp.to_s
#     @login
#   end
# title_menu

# INTRO & LOGIN

  #  NEW USER - CHECK TO MAKE SURE USER NAME NOT TAKEN
  while @login #title menu login input
    case @login
    when "1"
      system('clear')
      puts "Create player"
      print "Username: "
      username = gets.chomp

      # i = 1
      # if !User.find_by(name: username)
      #   puts "Please wait"
      #   while i < 100
      #     aliens << (JSON.parse(RestClient.get("https://rickandmortyapi.com/api/character/#{i}").body))
      #     puts @story_line[i-1]
      #     i += 1
      #   end
      # end
      break
  # 2. LOGIN - CHECK TO MAKE SURE THE USER NAME EXISTS
    when "2"
      system('clear')
      puts "Welcome back!! whoever the hell you are"
      puts "Nice to see you again: "
      print "Username: "
      username = gets.chomp.to_s
      @current_user = User.find_by(name: username)
      returning_user_story(username)
      break
  # 3. VIEW HIGH SCORES - BLOCKER @edgar
    # when "3"
    #   # @current_user.highscore
    #   # puts Score.all.order("user_score DESC LIMIT 5")
    #   break

    # 4. QUIT - exit!
  when "3"
      puts "ok adios"
        exit!
      end
    end



# puts "Please login"
# print "Username: "
# username = gets.chomp
#
# # POPULATE ALIEN & PLANET TABLE IF FIRST TIME
#
# aliens = []
# i = 1
# if !User.find_by(name: username)
#   puts "Please wait"
#   while i < 100
#     aliens << (JSON.parse(RestClient.get("https://rickandmortyapi.com/api/character/#{i}").body))
#     puts @story_line[i-1]
#     i += 1
#   end
# else
  # finds or create users then creates a new mortydex for the current user
  # @current_user = User.find_or_create_by(name: @username)
  # Mortydex.find_or_create_by(user_id: @current_user.id)
  #
  # @current_user.reset_mortydex
  # Mortydex.destroy_all # ONLY DESTROY YOURS TO KEEP HIGH SCORES

  # puts returning_user_story(username)
  # returning_user_story method is coming from opening_story.rb
# end
